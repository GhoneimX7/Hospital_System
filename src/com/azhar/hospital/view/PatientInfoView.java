/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package com.azhar.hospital.view;

import com.azhar.hospital.db.dao.PatientInfoDao;
import com.azhar.hospital.db.vo.PatientInfoVo;
import com.azhar.hospital.db.vo.UserDetailsVo;
import com.azhar.hospital.db.vo.UsersVo;
import com.azhar.hospital.validation.Validation;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;

/**
 *
 * @author fastox
 */
public class PatientInfoView extends javax.swing.JFrame {

    /**
     * Creates new form PatientInfoView
     */
    public PatientInfoView() {
        initComponents();
        this.setLocationRelativeTo(null);

    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        txtId = new javax.swing.JTextField();
        txtFirstName = new javax.swing.JTextField();
        txtFatherName = new javax.swing.JTextField();
        txtMobile = new javax.swing.JTextField();
        txtEmail = new javax.swing.JTextField();
        txtUserId = new javax.swing.JTextField();
        btnAdd = new javax.swing.JButton();
        btnDelete = new javax.swing.JButton();
        btnEdit = new javax.swing.JButton();
        btnSearch = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setResizable(false);

        jLabel1.setText("ID");

        jLabel2.setText("First Name");

        jLabel3.setText("Father Name");

        jLabel4.setText("Mobile");

        jLabel5.setText("Email");

        jLabel6.setText("User ID");

        txtFirstName.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtFirstNameActionPerformed(evt);
            }
        });

        btnAdd.setText("ADD");
        btnAdd.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAddActionPerformed(evt);
            }
        });

        btnDelete.setText("Delete");
        btnDelete.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnDeleteActionPerformed(evt);
            }
        });

        btnEdit.setText("Edit");
        btnEdit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnEditActionPerformed(evt);
            }
        });

        btnSearch.setText("Search");
        btnSearch.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSearchActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 74, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 84, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 89, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel5, javax.swing.GroupLayout.PREFERRED_SIZE, 102, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel6))
                        .addGap(42, 42, 42)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(txtFirstName)
                            .addComponent(txtId)
                            .addComponent(txtFatherName)
                            .addComponent(txtMobile)
                            .addComponent(txtEmail)
                            .addComponent(txtUserId, javax.swing.GroupLayout.DEFAULT_SIZE, 207, Short.MAX_VALUE)))
                    .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 116, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(105, 105, 105)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(btnAdd, javax.swing.GroupLayout.DEFAULT_SIZE, 79, Short.MAX_VALUE)
                    .addComponent(btnDelete, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(btnEdit, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(btnSearch, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap(103, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(21, 21, 21)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel1)
                            .addComponent(txtId, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(btnAdd))
                        .addGap(9, 9, 9)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(txtFirstName, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel2)
                            .addComponent(btnDelete))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel3)
                            .addComponent(txtFatherName, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(btnEdit)))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel4)
                    .addComponent(txtMobile, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnSearch))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel5)
                    .addComponent(txtEmail, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel6)
                    .addComponent(txtUserId, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(119, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void txtFirstNameActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtFirstNameActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtFirstNameActionPerformed

    private void btnAddActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAddActionPerformed
        boolean isTextEmpty = Validation.isEmpty(txtId.getText(), txtFirstName.getText(), txtFatherName.getText(), txtMobile.getText(), txtEmail.getText(), txtUserId.getText());
        boolean isDigit = Validation.isDigit(txtId.getText(), txtMobile.getText(), txtUserId.getText());
        boolean isText = Validation.isText(txtFirstName.getText(), txtFatherName.getText(), txtEmail.getText());
        if (!isDigit || !isText) {
            JOptionPane.showMessageDialog(null, "Please enter valid data");
            return;
        }
        if (isTextEmpty) {
            JOptionPane.showMessageDialog(null, "Please fill all required inputs");
            return;
        }
        int userId = Integer.valueOf(txtUserId.getText());
        UsersVo usersVo = new UsersVo();
        usersVo.setId(userId);
        int id = Integer.valueOf(txtId.getText());
        String firstName = txtFirstName.getText();
        String fatherName = txtFatherName.getText();
        String mobile = txtMobile.getText();
        String email = txtEmail.getText();
        PatientInfoVo piv = new PatientInfoVo();
        piv.setId(id);
        piv.setFirstName(firstName);
        piv.setFatherName(fatherName);
        piv.setMobile(mobile);
        piv.setEmail(email);
        piv.setUsersVo(usersVo);
        try {
            int count = PatientInfoDao.getInstance().insert(piv);
            if (count == 1) {
                JOptionPane.showMessageDialog(null, "Insert Successfully!");
                reset();
            } else {
                JOptionPane.showMessageDialog(null, "Insert not Successfully!");

            }
        } catch (Exception ex) {
            Logger.getLogger(UsersView.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_btnAddActionPerformed

    private void btnDeleteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnDeleteActionPerformed
        boolean isTextEmpty = Validation.isEmpty(txtId.getText());
        boolean isDigit = Validation.isDigit(txtId.getText());
        if (!isDigit) {
            JOptionPane.showMessageDialog(null, "Please enter valid data");
            return;
        }
        if (isTextEmpty) {
            JOptionPane.showMessageDialog(null, "Please fill all required inputs");
            return;
        }
        int id = Integer.valueOf(txtId.getText());
        PatientInfoVo patientInfoVo = new PatientInfoVo();
        patientInfoVo.setId(id);

        try {
            PatientInfoVo piv = PatientInfoDao.getInstance().getDataById(id);
            if (piv == null) {
                JOptionPane.showMessageDialog(null, "Id not found!");
                return;
            }
            int count = PatientInfoDao.getInstance().Delete(patientInfoVo);
            if (count == 1) {
                JOptionPane.showMessageDialog(null, "Delete Successfully!");
                reset();
            } else {
                JOptionPane.showMessageDialog(null, "Delete not Successfully!");

            }
        } catch (Exception ex) {
            Logger.getLogger(UsersView.class.getName()).log(Level.SEVERE, null, ex);

        }
    }//GEN-LAST:event_btnDeleteActionPerformed

    private void btnEditActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnEditActionPerformed
        boolean isTextEmpty = Validation.isEmpty(txtId.getText(), txtFirstName.getText(), txtFatherName.getText(), txtMobile.getText(), txtEmail.getText(), txtUserId.getText());
        boolean isDigit = Validation.isDigit(txtId.getText(), txtMobile.getText(), txtUserId.getText());
        boolean isText = Validation.isText(txtFirstName.getText(), txtFatherName.getText(), txtEmail.getText());
        if (!isDigit || !isText) {
            JOptionPane.showMessageDialog(null, "Please enter valid data");
            return;
        }
        if (isTextEmpty) {
            JOptionPane.showMessageDialog(null, "Please fill all required inputs");
            return;
        }
        int userId = Integer.valueOf(txtUserId.getText());
        UsersVo usersVo = new UsersVo();
        usersVo.setId(userId);
        int id = Integer.valueOf(txtId.getText());
        String firstName = txtFirstName.getText();
        String fatherName = txtFatherName.getText();
        String mobile = txtMobile.getText();
        String email = txtEmail.getText();
        PatientInfoVo piv = new PatientInfoVo();
        piv.setId(id);
        piv.setFirstName(firstName);
        piv.setFatherName(fatherName);
        piv.setMobile(mobile);
        piv.setEmail(email);
        piv.setUsersVo(usersVo);
        try {
            PatientInfoVo patientInfoVo = PatientInfoDao.getInstance().getDataById(id);
            if (patientInfoVo == null) {
                JOptionPane.showMessageDialog(null, "Id not found!");
                return;
            }
            int count = PatientInfoDao.getInstance().update(piv);
            if (count == 1) {
                JOptionPane.showMessageDialog(null, "Update Successfully!");
                reset();
            } else {
                JOptionPane.showMessageDialog(null, "Update not Successfully!");

            }
        } catch (Exception ex) {
            Logger.getLogger(UsersView.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_btnEditActionPerformed

    private void btnSearchActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSearchActionPerformed
        boolean isTextEmpty = Validation.isEmpty(txtId.getText());
        boolean isDigit = Validation.isDigit(txtId.getText());
        if (!isDigit) {
            JOptionPane.showMessageDialog(null, "Please enter valid ID");
            return;
        }
        if (isTextEmpty) {
            JOptionPane.showMessageDialog(null, "Please fill all required inputs");
            return;
        }
        int id = Integer.valueOf(txtId.getText());

        try {
            PatientInfoVo patientInfoVo = PatientInfoDao.getInstance().getDataById(id);
            if (patientInfoVo == null) {
                JOptionPane.showMessageDialog(null, "ID not exist!");
                reset();
            } else {
                txtFirstName.setText(patientInfoVo.getFirstName());
                txtFatherName.setText(patientInfoVo.getFatherName());
                txtMobile.setText(patientInfoVo.getMobile());
                txtEmail.setText(patientInfoVo.getEmail());
                txtUserId.setText(String.valueOf(patientInfoVo.getUsersVo().getId()));
            }
        } catch (Exception ex) {
            Logger.getLogger(UsersView.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_btnSearchActionPerformed
    protected void reset() {
        txtId.setText("");
        txtFirstName.setText("");
        txtFatherName.setText("");
        txtMobile.setText("");
        txtUserId.setText("");
        txtEmail.setText("");
    }

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(PatientInfoView.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(PatientInfoView.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(PatientInfoView.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(PatientInfoView.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new PatientInfoView().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnAdd;
    private javax.swing.JButton btnDelete;
    private javax.swing.JButton btnEdit;
    private javax.swing.JButton btnSearch;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JTextField txtEmail;
    private javax.swing.JTextField txtFatherName;
    private javax.swing.JTextField txtFirstName;
    private javax.swing.JTextField txtId;
    private javax.swing.JTextField txtMobile;
    private javax.swing.JTextField txtUserId;
    // End of variables declaration//GEN-END:variables
}
